apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-configmap
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}-configmap
    meta.helm.sh/release-namespace: {{ .Values.namespace }}
data:
  nginx.conf: |
    events {}
    http {
      server {
        listen {{ .Values.webserver.port }};
        server_name {{ .Values.webserver.host }};
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        # Add cache control headers
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";

        error_log /var/log/nginx/error.log debug;
        access_log /var/log/nginx/access.log;

        location {{ .Values.api.path }} {
          proxy_pass http://{{ .Values.namespace }}-api-service:{{ .Values.api.port }};
          proxy_ssl_verify off;  # For internal cluster communication
          proxy_ssl_server_name on;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_read_timeout 60s;
          proxy_connect_timeout 60s;
          proxy_send_timeout 60s;
          proxy_buffering off;
          proxy_buffer_size 128k;
          proxy_buffers 4 256k;
          proxy_busy_buffers_size 256k;
          access_log /var/log/nginx/api_access.log;
          error_log /var/log/nginx/api_error.log debug;

          # Add CORS headers
          add_header 'Access-Control-Allow-Origin' 'https://www.lmwfitness.co.uk' always;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
          add_header 'Access-Control-Allow-Credentials' 'true' always;
          
          if ($request_method = 'OPTIONS') {
              add_header 'Access-Control-Allow-Origin' 'https://www.lmwfitness.co.uk' always;
              add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
              add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
              add_header 'Access-Control-Allow-Credentials' 'true' always;
              add_header 'Content-Type' 'text/plain charset=UTF-8';
              add_header 'Content-Length' '0';
              return 204;
          }

          # Error handling
          proxy_intercept_errors on;
          error_page 502 503 504 /50x.html;
        }

        location /images/ {
          access_log /var/log/nginx/images_access.log;
          error_log /var/log/nginx/images_error.log debug;
          proxy_pass http://{{ .Values.namespace }}-api-service:{{ .Values.api.port }}/images/;
          proxy_ssl_verify off;  # For internal cluster communication
          proxy_ssl_server_name on;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_read_timeout 60s;
          proxy_connect_timeout 60s;
          proxy_send_timeout 60s;
          access_log off;

          # Add cache control headers
          add_header Cache-Control "no-cache, no-store, must-revalidate" always;
          add_header Pragma "no-cache" always;
          add_header Expires "0" always;

          # Error handling
          proxy_intercept_errors on;
          error_page 502 503 504 /50x.html;
        }

        location / {
          root /usr/share/nginx/html;
          index index.html;
          access_log off;
          try_files $uri $uri/ /index.html;

          # Add headers for SPA
          add_header Cache-Control "no-cache, no-store, must-revalidate";
          add_header Pragma "no-cache";
          add_header Expires "0";
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
          root /usr/share/nginx/html;
          internal;
        }
      }
    }