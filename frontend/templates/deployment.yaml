apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.webserver.applicationType }}
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: {{ .Values.webserver.applicationType }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}-deployment
    meta.helm.sh/release-namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.webserver.applicationType }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: frontend
        app.kubernetes.io/instance: lmwfitness-frontend
    spec:
      containers:
      - name: {{ .Values.webserver.applicationType }}
        image: {{ .Values.webserver.image.repository }}:{{ .Values.webserver.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.webserver.port }}
          name: http
          protocol: TCP
        resources:
          requests:
            memory: "96Mi"
            cpu: "150m"
          limits:
            memory: "128Mi"
            cpu: "250m"
        readinessProbe:
          httpGet:
            path: {{ .Values.webserver.path }}
            port: {{ .Values.webserver.port }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
        livenessProbe:
          httpGet:
            path: {{ .Values.webserver.path }}
            port: {{ .Values.webserver.port }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}

        envFrom:  
          - configMapRef:
              name: {{ .Release.Name }}-runtime-configmap
        env:
        - name: VITE_BACKEND_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: BACKEND_URL
        - name: VITE_STRIPE_PUBLISHABLE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: STRIPE_PUBLISHABLE_KEY
        - name: VITE_RECAPTCHA_SITE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: RECAPTCHA_SITE_KEY
        - name: VITE_BEGINNER_PRICE_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: BEGINNER_PRICE_ID
        - name: VITE_ADVANCED_PRICE_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: ADVANCED_PRICE_ID
        - name: VITE_TAILORED_COACHING_PRICE_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: TAILORED_COACHING_PRICE_ID
        - name: VITE_ULTIMATE_MINDSET_PACKAGE_PRICE_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: ULTIMATE_MINDSET_PACKAGE_PRICE_ID
        volumeMounts:
        - name: frontend-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
      volumes:
      - name: frontend-config
        configMap:
          name: {{ .Release.Name }}-configmap
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}  